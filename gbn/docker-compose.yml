version: '3.7'

volumes:
  gbn-connector-logs:
  gbn-connector-db-data:
  gbn-store-db-data:

services:
  traefik:
    container_name: bridgehead-traefik
    image: traefik:2
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --api.dashboard=true
      - --accesslog=true # print access-logs
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
    labels:
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${bc_auth_users}"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ../certs:/tools/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"

  forward_proxy:
    container_name: bridgehead-forward-proxy
    image: ubuntu/squid
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
    volumes:
      - "bridgehead-proxy:/var/log/squid"
    
  landing:
    container_name: bridgehead-landingpage
    image: samply/bridgehead-landingpage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.landing.rule=PathPrefix(`/`)"
      - "traefik.http.services.landing.loadbalancer.server.port=80"
      - "traefik.http.routers.landing.tls=true"
    environment:
      HOST: ${HOST}
      PROJECT: ${PROJECT}
      SITE_NAME: ${SITE_NAME}

  blaze:
    image: "samply/blaze:0.17"
    container_name: bridgehead-ccp-blaze
    environment:
      BASE_URL: "http://blaze:8080"
      JAVA_TOOL_OPTIONS: "-Xmx4g"
      LOG_LEVEL: "debug"
      ENFORCE_REFERENTIAL_INTEGRITY: "false"
    volumes:
    - "blaze-data:/app/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.ccp-auth.basicauth.users=${bc_auth_users}"
      - "traefik.http.routers.blaze_ccp.rule=PathPrefix(`/ccp-localdatamanagement`)"
      - "traefik.http.middlewares.ccp_b_strip.stripprefix.prefixes=/ccp-localdatamanagement"
      - "traefik.http.services.blaze_ccp.loadbalancer.server.port=8080"
      - "traefik.http.routers.blaze_ccp.middlewares=ccp_b_strip,ccp-auth"
      - "traefik.http.routers.blaze_ccp.tls=true"

  gbn-connector:
    image: "samply/share-client:gbn-feature-environmentPreconfiguration"
    environment:
      POSTGRES_PASSWORD: ${CONNECTOR_POSTGRES_PASS}
    volumes:
      - "gbn-connector-logs:/usr/local/tomcat/logs"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gbn_connector.rule=PathPrefix(`/gbn-connector`)"
      - "traefik.http.services.gbn_connector.loadbalancer.server.port=8080"
    depends_on:
      - "gbn-connector-db"
    restart: "always"

  gbn-connector-db:
    image: "postgres:10.17"
    environment:
      POSTGRES_DB: "samply.connector"
      POSTGRES_USER: "samply"
      POSTGRES_PASSWORD: ${CONNECTOR_POSTGRES_PASS}
    volumes:
      - "gbn-connector-db-data:/var/lib/postgresql/data"
    restart: "always"
